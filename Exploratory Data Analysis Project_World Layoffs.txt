-- Exploratory Data Analysis (EDA)

-- Here we are going to explore the data and find trends or patterns or anything interesting like outliers

Select *
from layoffs_staging2;

Select MAX(total_laid_off)
from layoffs_staging2;

Select MAX(total_laid_off), max(percentage_laid_off)
from layoffs_staging2
where percentage_laid_off =1;


-- Looking at Percentage to see how big these layoffs were

SELECT MAX(percentage_laid_off),  MIN(percentage_laid_off)
FROM layoffs_staging2
WHERE  percentage_laid_off IS NOT NULL;

-- Which companies had 1 which is basically 100 percent of they company laid off

Select *
from layoffs_staging2
where percentage_laid_off =1
order by total_laid_off desc;

-- these are mostly startups it looks like who all went out of business during this time

-- Companies with the most Total Layoffs

Select Company, sum(total_laid_off)
from layoffs_staging2
group by company
order by 2 desc;

Select min(`date`), max(`date`)
from layoffs_staging2;

Select industry, sum(total_laid_off)
from layoffs_staging2
group by industry
order by 2 desc;

-- Country with the most Total Layoffs

Select country, sum(total_laid_off)
from layoffs_staging2
group by country
order by 2 desc;

select year(`date`), sum(total_laid_off)
from layoffs_staging2
group by year(`date`)
order by 1 desc;

-- Total layoffs as per the months

select substring(`date`, 1, 7) as `month`, sum(total_laid_off)
from layoffs_staging2
where substring(`date`, 1, 7) is not null
group by `month`
order by 1 asc;

-- Rolling Total of Layoffs Per Month with CTE

with Rolling_Total as
(
select substring(`date`, 1, 7) as `month`, sum(total_laid_off) as total_off
from layoffs_staging2
where substring(`date`, 1, 7) is not null
group by `month`
order by 1 asc
)
select `month`, total_off, sum(total_off) over(order by `month`) as rolling_total
from Rolling_Total;


Select Company, year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
order by 3 desc;

with company_year(company, years, total_laid_off) as 
(
Select Company, year(`date`), sum(total_laid_off)
from layoffs_staging2
group by company, year(`date`)
), Company_Year_Rank as
(select *, dense_rank() over(partition by years order by total_laid_off desc) as ranking
from company_year
where years is not null
)
select *
from Company_Year_Rank
where ranking <= 5;









































































